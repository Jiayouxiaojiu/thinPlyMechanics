# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def rve_mesh_F1_C1_tri2(isUpperBounded=None,isLowerBounded=None,isCohesive=None,Rf=None,Vff=None,tratio=None,theta=None,deltatheta=None,f1=None,f2=None,f3=None,N1o1=None,N2o1=None,N3o1=None,N4o1=None,N5o1=None,N6o1=None,*args,**kwargs):
    varargin = rve_mesh_F1_C1_tri2.varargin
    nargin = rve_mesh_F1_C1_tri2.nargin

    ##
#==============================================================================
# Copyright (c) 2016 Universit de Lorraine & Lule tekniska universitet
# Author: Luca Di Stasio <luca.distasio@gmail.com>
#                        <luca.distasio@ingpec.eu>
    
    # Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 
# Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
# Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in
# the documentation and/or other materials provided with the distribution
# Neither the name of the Universit de Lorraine or Lule tekniska universitet
# nor the names of its contributors may be used to endorse or promote products
# derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#==============================================================================
    
    #  DESCRIPTION
#  
#  A function to perform
    
    # Input: isBounded = true; # flag for model type
# 
# Rf = 1; #[10^-6 m] Fiber diameter in micrometers. 
#         # Carbon fibers have a tipical diameter between 5 and 10 
#         # micrometers, glass fibers between 3 and 20
# Vff = 0.6; #[-] Fiber volume fraction
# tratio = 0.6; # [-] ratio of [0] ply thickness to [90] ply thickness
# theta = 30; #[] angular position of crack
# theta = theta*pi/180;
# deltatheta = 10; #[] angular aperture of crack
# deltatheta = deltatheta*pi/180;
# 
# f1 = 0.5; #[-] Innermost square mesh region side defined by 2*f1*Rf
# f2 = 0.77; #[-] Inner circular mesh region radius defined by f2*Rf
# f3 = 1.05; #[-] Outer circular mesh region radius defined by f2*Rf
# 
# #Number of elements:
# N1 = 20; #[-] Notice that angular resolution is equal to 90/N1
# N2 = 10; #[-] 
# N3 = 8; #[-] 
# N4 = 5; #[-] 
# N5 = 20; #[-] 
# N6 = 20; #[-] 
#  Output:
    
    ##
    
    #-------------------------------------------------------------------------#
#-------------------------------------------------------------------------#
#-                          Input Data                                   -#
#-------------------------------------------------------------------------#
#-------------------------------------------------------------------------#
    
    l=dot(dot(0.5,Rf),sqrt(pi / Vff))
    N1=dot(2,N1o1)
    N2=dot(2,N2o1)
    N3=dot(2,N3o1)
    N4=dot(2,N4o1)
    N5=dot(2,N5o1)
    N6=dot(2,N6o1)
    #-------------------------------------------------------------------------#
#-------------------------------------------------------------------------#
#-                        Mesh Generation                                -#
#-------------------------------------------------------------------------#
#-------------------------------------------------------------------------#
    
    #-------------------------------------------------------------------------#
#-                   Section 1 (innermost part)                          -#
#-------------------------------------------------------------------------#
    
    part1temp=structSquare(0,0,dot(dot(2,f1),Rf),N1)
    part1=matlabarray([])
    for j in arange(1,N1o1).reshape(-1):
        part1=matlabarray(cat([part1],[part1temp[dot(dot((j - 1),2),(N1 + 1)) + 1:dot(dot((j - 1),2),(N1 + 1)) + (N1 + 1),:]],[part1temp[dot(dot((j - 1),2),(N1 + 1)) + (N1 + 1) + 1:2:dot(dot((j - 1),2),(N1 + 1)) + dot(2,(N1 + 1)),:]]))
    
    part1=matlabarray(cat([part1],[part1temp[dot(N1,(N1 + 1)) + 1:dot((N1 + 1),(N1 + 1)),:]]))
    clear('part1temp')
    #-------------------------------------------------------------------------#
#-                           Section 2                                   -#
#-------------------------------------------------------------------------#
    
    A=matlabarray(cat(dot(dot(f2,Rf),cos(dot(5,pi) / 4)),dot(dot(f2,Rf),sin(dot(5,pi) / 4))))
    B=matlabarray(cat(dot(dot(f2,Rf),cos(dot(7,pi) / 4)),dot(dot(f2,Rf),sin(dot(7,pi) / 4))))
    C=matlabarray(cat(dot(f1,Rf),dot(- f1,Rf)))
    D=matlabarray(cat(dot(- f1,Rf),dot(- f1,Rf)))
    part2=generatelattice2D(A[1],N1 + 1,(B[1] - A[1]) / N1,A[2],N2 + 1,(D[2] - A[2]) / N2,A[1],B[1],N1 + 1,A[2],D[2],N2 + 1)
    e1=zeros(N1 + 1,6)
    e2=zeros(N2 + 1,6)
    e3=zeros(N1 + 1,6)
    e4=zeros(N2 + 1,6)
    c1=zeros(1,8)
    c2=zeros(1,8)
    c3=zeros(1,8)
    c4=zeros(1,8)
    c1[1,1:2]=A
    c2[1,1:2]=B
    c3[1,1:2]=C
    c4[1,1:2]=D
    thetas=(arange(dot(5,pi) / 4,dot(7,pi) / 4,(pi / 2) / N1)).T
    e1[:,1]=dot(dot(f2,Rf),cos(thetas))
    e1[:,2]=dot(dot(f2,Rf),sin(thetas))
    e2[:,1]=(arange(c2[1],c3[1],(c3[1] - c2[1]) / N2)).T
    e2[:,2]=(arange(c2[2],c3[2],(c3[2] - c2[2]) / N2)).T
    xs=(arange(c4[1],c3[1],(c3[1] - c4[1]) / N1)).T
    e3[:,1]=xs
    e3[:,2]=dot(c3[2],ones(length(xs),1))
    e4[:,1]=(arange(c1[1],c4[1],(c4[1] - c1[1]) / N2)).T
    e4[:,2]=(arange(c1[2],c4[2],(c4[2] - c1[2]) / N2)).T
    itmax=10
    tol=10 ** - 6
    part2=transfiniteinterpolation2D(dot((N1 + 1),(N2 + 1)),part2[:,1:2],A[1],B[1],A[2],D[2],N1 + 1,N2 + 1,1,e1,e2,e3,e4,c1,c2,c3,c4)
    indicesbulk,indicesinternalbulk,indicesE1,indicesE2,indicesE3,indicesE4,indicesexternalE1,indicesexternalE2,indicesexternalE3,indicesexternalE4,indicesinternalE1,indicesinternalE2,indicesinternalE3,indicesinternalE4,indicesC1,indicesC2,indicesC3,indicesC4,indicesinternalC1,indicesinternalC2,indicesinternalC3,indicesinternalC4=getindices2D(N1 + 1,N2 + 1,nargout=22)
    temp1,temp2,temp3,firstdevneighbours=build_neighbourhoods2D(dot((N1 + 1),(N2 + 1)),N1 + 1,0,0,0,0,0,indicesbulk,indicesinternalbulk,indicesE1,indicesE2,indicesE3,indicesE4,indicesexternalE1,indicesexternalE2,indicesexternalE3,indicesexternalE4,indicesinternalE1,indicesinternalE2,indicesinternalE3,indicesinternalE4,indicesC1,indicesC2,indicesC3,indicesC4,indicesinternalC1,indicesinternalC2,indicesinternalC3,indicesinternalC4,nargout=4)
    part2=sparseellipticgridgen2D(N1 + 1,dot((N1 + 1),(N2 + 1)),part2,cat((B[1] - A[1]) / N1,(D[2] - A[2]) / N2),0,0,indicesbulk,indicesE1,indicesE2,indicesE3,indicesE4,indicesC1,indicesC2,indicesC3,indicesC4,firstdevneighbours,itmax,tol,0)
    clear('temp1','temp2','temp3')
    part2=part2[1:dot(N2,(N1 + 1)),3:4]
    temp=copy(part2)
    part2=zeros(dot(N1,N2),2)
    for j in arange(1,N2).reshape(-1):
        part2[dot((j - 1),N1) + 1:dot(j,N1),:]=temp[dot((j - 1),(N1 + 1)) + 1:dot(j,(N1 + 1)) - 1,:]
    
    part2a=copy(part2)
    part2b=rotate2D(part2,pi / 2)
    part2c=rotate2D(part2,pi)
    part2d=rotate2D(part2,dot(3,pi) / 2)
    part2=zeros(dot(dot(4,N1),N2),2)
    for i in arange(1,N2).reshape(-1):
        part2[dot(dot((i - 1),4),N1) + 1:dot(dot((i - 1),4),N1) + N1,:]=part2a[dot((i - 1),N1) + 1:dot(i,N1),:]
        part2[dot(dot((i - 1),4),N1) + N1 + 1:dot(dot((i - 1),4),N1) + dot(2,N1),:]=part2b[dot((i - 1),N1) + 1:dot(i,N1),:]
        part2[dot(dot((i - 1),4),N1) + dot(2,N1) + 1:dot(dot((i - 1),4),N1) + dot(3,N1),:]=part2c[dot((i - 1),N1) + 1:dot(i,N1),:]
        part2[dot(dot((i - 1),4),N1) + dot(3,N1) + 1:dot(dot((i - 1),4),N1) + dot(4,N1),:]=part2d[dot((i - 1),N1) + 1:dot(i,N1),:]
    
    part2temp=copy(part2)
    part2=matlabarray([])
    for j in arange(1,N2o1).reshape(-1):
        part2=matlabarray(cat([part2],[part2temp[dot(dot((j - 1),2),(dot(4,N1))) + 1:dot(dot((j - 1),2),(dot(4,N1))) + (dot(4,N1)),:]],[part2temp[dot(dot((j - 1),2),(dot(4,N1))) + (dot(4,N1)) + 1:2:dot(dot((j - 1),2),(dot(4,N1))) + dot(2,(dot(4,N1))),:]]))
    
    clear('part2temp')
    #-------------------------------------------------------------------------#
#-                           Section 3                                   -#
#-------------------------------------------------------------------------#
    
    part3=circular_arc(0,0,Rf,dot(f2,Rf),dot(5,pi) / 4,dot(7,pi) / 4,N3,N1)
    part3=part3[1:dot(N3,(N1 + 1)),:]
    part3=part3[1:dot(N3,(N1 + 1)),1:2]
    temp=copy(part3)
    part3=zeros(dot(N1,N3),2)
    for j in arange(1,N3).reshape(-1):
        part3[dot((j - 1),N1) + 1:dot(j,N1),:]=temp[dot((j - 1),(N1 + 1)) + 1:dot(j,(N1 + 1)) - 1,:]
    
    part3a=copy(part3)
    part3b=rotate2D(part3,pi / 2)
    part3c=rotate2D(part3,pi)
    part3d=rotate2D(part3,dot(3,pi) / 2)
    part3=zeros(dot(dot(4,N1),N3),2)
    for i in arange(1,N3).reshape(-1):
        part3[dot(dot((i - 1),4),N1) + 1:dot(dot((i - 1),4),N1) + N1,:]=part3a[dot((i - 1),N1) + 1:dot(i,N1),:]
        part3[dot(dot((i - 1),4),N1) + N1 + 1:dot(dot((i - 1),4),N1) + dot(2,N1),:]=part3b[dot((i - 1),N1) + 1:dot(i,N1),:]
        part3[dot(dot((i - 1),4),N1) + dot(2,N1) + 1:dot(dot((i - 1),4),N1) + dot(3,N1),:]=part3c[dot((i - 1),N1) + 1:dot(i,N1),:]
        part3[dot(dot((i - 1),4),N1) + dot(3,N1) + 1:dot(dot((i - 1),4),N1) + dot(4,N1),:]=part3d[dot((i - 1),N1) + 1:dot(i,N1),:]
    
    part3temp=copy(part3)
    part3=matlabarray([])
    for j in arange(1,N3o1).reshape(-1):
        part3=matlabarray(cat([part3],[part3temp[dot(dot((j - 1),2),(dot(4,N1))) + 1:dot(dot((j - 1),2),(dot(4,N1))) + (dot(4,N1)),:]],[part3temp[dot(dot((j - 1),2),(dot(4,N1))) + (dot(4,N1)) + 1:2:dot(dot((j - 1),2),(dot(4,N1))) + dot(2,(dot(4,N1))),:]]))
    
    clear('part3temp')
    #-------------------------------------------------------------------------#
#-                           Section 4                                   -#
#-------------------------------------------------------------------------#
    
    part4=circular_arc(0,0,dot(f3,Rf),Rf,dot(5,pi) / 4,dot(7,pi) / 4,N4,N1)
    temp=copy(part4)
    part4=zeros(dot(N1,(N4 + 1)),2)
    for j in arange(1,N4 + 1).reshape(-1):
        part4[dot((j - 1),N1) + 1:dot(j,N1),:]=temp[dot((j - 1),(N1 + 1)) + 1:dot(j,(N1 + 1)) - 1,:]
    
    part4a=copy(part4)
    part4b=rotate2D(part4,pi / 2)
    part4c=rotate2D(part4,pi)
    part4d=rotate2D(part4,dot(3,pi) / 2)
    part4=zeros(dot(dot(4,N1),(N4 + 1)),2)
    for i in arange(1,N4 + 1).reshape(-1):
        part4[dot(dot((i - 1),4),N1) + 1:dot(dot((i - 1),4),N1) + N1,:]=part4a[dot((i - 1),N1) + 1:dot(i,N1),:]
        part4[dot(dot((i - 1),4),N1) + N1 + 1:dot(dot((i - 1),4),N1) + dot(2,N1),:]=part4b[dot((i - 1),N1) + 1:dot(i,N1),:]
        part4[dot(dot((i - 1),4),N1) + dot(2,N1) + 1:dot(dot((i - 1),4),N1) + dot(3,N1),:]=part4c[dot((i - 1),N1) + 1:dot(i,N1),:]
        part4[dot(dot((i - 1),4),N1) + dot(3,N1) + 1:dot(dot((i - 1),4),N1) + dot(4,N1),:]=part4d[dot((i - 1),N1) + 1:dot(i,N1),:]
    
    part4temp=copy(part4)
    part4=matlabarray([])
    for j in arange(1,N4o1).reshape(-1):
        part4=matlabarray(cat([part4],[part4temp[dot(dot((j - 1),2),(dot(4,N1))) + 1:dot(dot((j - 1),2),(dot(4,N1))) + (dot(4,N1)),:]],[part4temp[dot(dot((j - 1),2),(dot(4,N1))) + (dot(4,N1)) + 1:2:dot(dot((j - 1),2),(dot(4,N1))) + dot(2,(dot(4,N1))),:]]))
    
    part4=matlabarray(cat([part4],[part4temp[dot(N4,(dot(4,N1))) + 1:dot((N4 + 1),(dot(4,N1))),:]]))
    clear('part4temp')
    #-------------------------------------------------------------------------#
#-                   Section 5 (outermost part)                          -#
#-------------------------------------------------------------------------#
    
    A=matlabarray(cat(- l,- l))
    B=matlabarray(cat(l,- l))
    C=matlabarray(cat(dot(dot(f3,Rf),cos(dot(7,pi) / 4)),dot(dot(f3,Rf),sin(dot(7,pi) / 4))))
    D=matlabarray(cat(dot(dot(f3,Rf),cos(dot(5,pi) / 4)),dot(dot(f3,Rf),sin(dot(5,pi) / 4))))
    part5=generatelattice2D(A[1],N1 + 1,(B[1] - A[1]) / N1,A[2],N5 + 1,(D[2] - A[2]) / N5,A[1],B[1],N1 + 1,A[2],D[2],N5 + 1)
    e1=zeros(N1 + 1,6)
    e2=zeros(N5 + 1,6)
    e3=zeros(N1 + 1,6)
    e4=zeros(N5 + 1,6)
    c1=zeros(1,8)
    c2=zeros(1,8)
    c3=zeros(1,8)
    c4=zeros(1,8)
    c1[1,1:2]=A
    c2[1,1:2]=B
    c3[1,1:2]=C
    c4[1,1:2]=D
    xs=(arange(c1[1],c2[1],(c2[1] - c1[1]) / N1)).T
    e1[:,1]=xs
    e1[:,2]=dot(c1[2],ones(length(xs),1))
    e2[:,1]=(arange(c2[1],c3[1],(c3[1] - c2[1]) / N5)).T
    e2[:,2]=(arange(c2[2],c3[2],(c3[2] - c2[2]) / N5)).T
    thetas=(arange(dot(5,pi) / 4,dot(7,pi) / 4,(pi / 2) / N1)).T
    e3[:,1]=dot(dot(f3,Rf),cos(thetas))
    e3[:,2]=dot(dot(f3,Rf),sin(thetas))
    e4[:,1]=(arange(c1[1],c4[1],(c4[1] - c1[1]) / N5)).T
    e4[:,2]=(arange(c1[2],c4[2],(c4[2] - c1[2]) / N5)).T
    itmax=10
    tol=10 ** - 6
    part5=transfiniteinterpolation2D(dot((N1 + 1),(N5 + 1)),part5[:,1:2],A[1],B[1],A[2],D[2],N1 + 1,N5 + 1,1,e1,e2,e3,e4,c1,c2,c3,c4)
    indicesbulk,indicesinternalbulk,indicesE1,indicesE2,indicesE3,indicesE4,indicesexternalE1,indicesexternalE2,indicesexternalE3,indicesexternalE4,indicesinternalE1,indicesinternalE2,indicesinternalE3,indicesinternalE4,indicesC1,indicesC2,indicesC3,indicesC4,indicesinternalC1,indicesinternalC2,indicesinternalC3,indicesinternalC4=getindices2D(N1 + 1,N5 + 1,nargout=22)
    temp1,temp2,temp3,firstdevneighbours=build_neighbourhoods2D(dot((N1 + 1),(N5 + 1)),N1 + 1,0,0,0,0,0,indicesbulk,indicesinternalbulk,indicesE1,indicesE2,indicesE3,indicesE4,indicesexternalE1,indicesexternalE2,indicesexternalE3,indicesexternalE4,indicesinternalE1,indicesinternalE2,indicesinternalE3,indicesinternalE4,indicesC1,indicesC2,indicesC3,indicesC4,indicesinternalC1,indicesinternalC2,indicesinternalC3,indicesinternalC4,nargout=4)
    part5=sparseellipticgridgen2D(N1 + 1,dot((N1 + 1),(N5 + 1)),part5,cat((B[1] - A[1]) / N1,(D[2] - A[2]) / N2),0,0,indicesbulk,indicesE1,indicesE2,indicesE3,indicesE4,indicesC1,indicesC2,indicesC3,indicesC4,firstdevneighbours,itmax,tol,0)
    clear('temp1','temp2','temp3')
    part5=part5[1:dot(N5,(N1 + 1)),3:4]
    temp=copy(part5)
    part5=zeros(dot(N1,N5),2)
    for j in arange(1,N5).reshape(-1):
        part5[dot((j - 1),N1) + 1:dot(j,N1),:]=temp[dot((j - 1),(N1 + 1)) + 1:dot(j,(N1 + 1)) - 1,:]
    
    part5a=copy(part5)
    part5b=rotate2D(part5,pi / 2)
    part5c=rotate2D(part5,pi)
    part5d=rotate2D(part5,dot(3,pi) / 2)
    part5=zeros(dot(dot(4,N1),N5),2)
    for i in arange(1,N5).reshape(-1):
        part5[dot(dot((i - 1),4),N1) + 1:dot(dot((i - 1),4),N1) + N1,:]=part5a[dot((i - 1),N1) + 1:dot(i,N1),:]
        part5[dot(dot((i - 1),4),N1) + N1 + 1:dot(dot((i - 1),4),N1) + dot(2,N1),:]=part5b[dot((i - 1),N1) + 1:dot(i,N1),:]
        part5[dot(dot((i - 1),4),N1) + dot(2,N1) + 1:dot(dot((i - 1),4),N1) + dot(3,N1),:]=part5c[dot((i - 1),N1) + 1:dot(i,N1),:]
        part5[dot(dot((i - 1),4),N1) + dot(3,N1) + 1:dot(dot((i - 1),4),N1) + dot(4,N1),:]=part5d[dot((i - 1),N1) + 1:dot(i,N1),:]
    
    part5temp=copy(part5)
    part5=matlabarray([])
    for j in arange(1,N5o1).reshape(-1):
        part5=matlabarray(cat([part5],[part5temp[dot(dot((j - 1),2),(dot(4,N1))) + 1:dot(dot((j - 1),2),(dot(4,N1))) + (dot(4,N1)),:]],[part5temp[dot(dot((j - 1),2),(dot(4,N1))) + (dot(4,N1)) + 1:2:dot(dot((j - 1),2),(dot(4,N1))) + dot(2,(dot(4,N1))),:]]))
    
    clear('part5temp')
    #-------------------------------------------------------------------------#
#-            Section 6 (bounding 0 layer, if present)                  -#
#-------------------------------------------------------------------------#
    
    if isUpperBounded and isLowerBounded:
        part6up=structRectangle(0,l + dot(dot(0.5,tratio),l),dot(2,l),dot(tratio,l),N1,N6)
        part6bot=rotate2D(part6up,pi)
        part6uptemp=copy(part6up)
        part6up=matlabarray([])
        for j in arange(1,N6o1).reshape(-1):
            part6up=matlabarray(cat([part6up],[part6uptemp[dot(dot((j - 1),2),(N1 + 1)) + 1:dot(dot((j - 1),2),(N1 + 1)) + (N1 + 1),:]],[part6uptemp[dot(dot((j - 1),2),(N1 + 1)) + (N1 + 1) + 1:2:dot(dot((j - 1),2),(N1 + 1)) + dot(2,(N1 + 1)),:]]))
        part6up=matlabarray(cat([part6up],[part6uptemp[dot(N6,(N1 + 1)) + 1:dot((N6 + 1),(N1 + 1)),:]]))
        clear('part6uptemp')
        part6bottemp=copy(part6bot)
        part6bot=matlabarray([])
        for j in arange(1,N6o1).reshape(-1):
            part6bot=matlabarray(cat([part6bot],[part6bottemp[dot(dot((j - 1),2),(N1 + 1)) + 1:dot(dot((j - 1),2),(N1 + 1)) + (N1 + 1),:]],[part6bottemp[dot(dot((j - 1),2),(N1 + 1)) + (N1 + 1) + 1:2:dot(dot((j - 1),2),(N1 + 1)) + dot(2,(N1 + 1)),:]]))
        part6bot=matlabarray(cat([part6bot],[part6bottemp[dot(N6,(N1 + 1)) + 1:dot((N6 + 1),(N1 + 1)),:]]))
        clear('part6bottemp')
        part6=matlabarray(cat([part6bot],[part6up]))
    else:
        if isUpperBounded:
            part6up=structRectangle(0,l + dot(dot(0.5,tratio),l),dot(2,l),dot(tratio,l),N1,N6)
            part6uptemp=copy(part6up)
            part6up=matlabarray([])
            for j in arange(1,N6o1).reshape(-1):
                part6up=matlabarray(cat([part6up],[part6uptemp[dot(dot((j - 1),2),(N1 + 1)) + 1:dot(dot((j - 1),2),(N1 + 1)) + (N1 + 1),:]],[part6uptemp[dot(dot((j - 1),2),(N1 + 1)) + (N1 + 1) + 1:2:dot(dot((j - 1),2),(N1 + 1)) + dot(2,(N1 + 1)),:]]))
            part6up=matlabarray(cat([part6up],[part6uptemp[dot(N6,(N1 + 1)) + 1:dot((N6 + 1),(N1 + 1)),:]]))
            clear('part6uptemp')
            part6=copy(part6up)
        else:
            if isLowerBounded:
                part6up=structRectangle(0,l + dot(dot(0.5,tratio),l),dot(2,l),dot(tratio,l),N1,N6)
                part6bot=rotate2D(part6up,pi)
                part6bottemp=copy(part6bot)
                part6bot=matlabarray([])
                for j in arange(1,N6o1).reshape(-1):
                    part6bot=matlabarray(cat([part6bot],[part6bottemp[dot(dot((j - 1),2),(N1 + 1)) + 1:dot(dot((j - 1),2),(N1 + 1)) + (N1 + 1),:]],[part6bottemp[dot(dot((j - 1),2),(N1 + 1)) + (N1 + 1) + 1:2:dot(dot((j - 1),2),(N1 + 1)) + dot(2,(N1 + 1)),:]]))
                part6bot=matlabarray(cat([part6bot],[part6bottemp[dot(N6,(N1 + 1)) + 1:dot((N6 + 1),(N1 + 1)),:]]))
                clear('part6bottemp')
                part6=copy(part6bot)
    
    #-------------------------------------------------------------------------#
#-                              Overall                                  -#
#-------------------------------------------------------------------------#
    
    nodes=matlabarray(cat([part5],[part4],[part3],[part2],[part1]))
    if isUpperBounded or isLowerBounded:
        nodes=matlabarray(cat([nodes],[part6]))
    
    #-------------------------------------------------------------------------#
#-                         Elements & Edges                              -#
#-------------------------------------------------------------------------#
    
    elements1=zeros(dot(dot(4,N1o1),(N5o1 + N4o1)),8)
    for j in arange(1,N5o1 + N4o1).reshape(-1):
        elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),1]=(arange(dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + 1,dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) - 1,2)).T
        elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1) - 1,2]=(arange(dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + 3,dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) - 1,2)).T
        elements1[dot(dot(j,4),N1o1),2]=dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + 1
        elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1) - 1,3]=(arange(dot(j,(dot(4,N1) + dot(4,N1o1))) + 3,dot(j,(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) - 1,2)).T
        elements1[dot(dot(j,4),N1o1),3]=dot(j,(dot(4,N1) + dot(4,N1o1))) + 1
        elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),4]=(arange(dot(j,(dot(4,N1) + dot(4,N1o1))) + 1,dot(j,(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) - 1,2)).T
        elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),5]=(arange(dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + 2,dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1),2)).T
        elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1) - 1,6]=(arange(dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) + 2,dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) + dot(4,N1o1))).T
        elements1[dot(dot(j,4),N1o1),6]=dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) + 1
        elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),7]=(arange(dot(j,(dot(4,N1) + dot(4,N1o1))) + 2,dot(j,(dot(4,N1) + dot(4,N1o1))) + dot(4,N1),2)).T
        elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),8]=(arange(dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) + 1,dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) + dot(4,N1o1))).T
    
    edges1=zeros(dot(dot(4,(dot(4,N1o1))),(N5o1 + N4o1)) + dot(dot(2,4),N1o1),2)
    for j in arange(1,N5o1 + N4o1).reshape(-1):
        edges1[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 1:4:dot(j,(dot(4,(dot(4,N1o1))))) - 3,1]=elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),1]
        edges1[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 1:4:dot(j,(dot(4,(dot(4,N1o1))))) - 3,2]=elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),5]
        edges1[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 2:4:dot(j,(dot(4,(dot(4,N1o1))))) - 2,1]=elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),5]
        edges1[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 2:4:dot(j,(dot(4,(dot(4,N1o1))))) - 2,2]=elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),2]
        edges1[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 3:4:dot(j,(dot(4,(dot(4,N1o1))))) - 1,1]=elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),1]
        edges1[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 3:4:dot(j,(dot(4,(dot(4,N1o1))))) - 1,2]=elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),8]
        edges1[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 4:4:dot(j,(dot(4,(dot(4,N1o1))))),1]=elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),8]
        edges1[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 4:4:dot(j,(dot(4,(dot(4,N1o1))))),2]=elements1[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),4]
    
    edges1[dot((dot(4,(dot(4,N1o1)))),(N5o1 + N4o1)) + 1:2:dot((dot(4,(dot(4,N1o1)))),(N5o1 + N4o1)) + dot(dot(2,4),N1o1) - 1,1]=elements1[dot(dot(((N5o1 + N4o1) - 1),4),N1o1) + 1:dot(dot((N5o1 + N4o1),4),N1o1),4]
    edges1[dot((dot(4,(dot(4,N1o1)))),(N5o1 + N4o1)) + 1:2:dot((dot(4,(dot(4,N1o1)))),(N5o1 + N4o1)) + dot(dot(2,4),N1o1) - 1,2]=elements1[dot(dot(((N5o1 + N4o1) - 1),4),N1o1) + 1:dot(dot((N5o1 + N4o1),4),N1o1),7]
    edges1[dot((dot(4,(dot(4,N1o1)))),(N5o1 + N4o1)) + 2:2:dot((dot(4,(dot(4,N1o1)))),(N5o1 + N4o1)) + dot(dot(2,4),N1o1),1]=elements1[dot(dot(((N5o1 + N4o1) - 1),4),N1o1) + 1:dot(dot((N5o1 + N4o1),4),N1o1),7]
    edges1[dot((dot(4,(dot(4,N1o1)))),(N5o1 + N4o1)) + 2:2:dot((dot(4,(dot(4,N1o1)))),(N5o1 + N4o1)) + dot(dot(2,4),N1o1),2]=elements1[dot(dot(((N5o1 + N4o1) - 1),4),N1o1) + 1:dot(dot((N5o1 + N4o1),4),N1o1),3]
    elements2=zeros(dot(dot(4,N1o1),(N3o1 + N2o1)),8)
    for j in arange(1,N3o1 + N2o1 - 1).reshape(-1):
        elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),1]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + (arange(dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + 1,dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) - 1,2)).T
        elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1) - 1,2]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + (arange(dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + 3,dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) - 1,2)).T
        elements2[dot(dot(j,4),N1o1),2]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + 1
        elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1) - 1,3]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + (arange(dot(j,(dot(4,N1) + dot(4,N1o1))) + 3,dot(j,(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) - 1,2)).T
        elements2[dot(dot(j,4),N1o1),3]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot(j,(dot(4,N1) + dot(4,N1o1))) + 1
        elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),4]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + (arange(dot(j,(dot(4,N1) + dot(4,N1o1))) + 1,dot(j,(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) - 1,2)).T
        elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),5]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + (arange(dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + 2,dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1),2)).T
        elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1) - 1,6]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + (arange(dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) + 2,dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) + dot(4,N1o1))).T
        elements2[dot(dot(j,4),N1o1),6]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) + 1
        elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),7]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + (arange(dot(j,(dot(4,N1) + dot(4,N1o1))) + 2,dot(j,(dot(4,N1) + dot(4,N1o1))) + dot(4,N1),2)).T
        elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),8]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + (arange(dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) + 1,dot((j - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) + dot(4,N1o1))).T
    
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + 1:dot(dot((N3o1 + N2o1),4),N1o1),1]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + (arange(dot(((N3o1 + N2o1) - 1),(dot(4,N1) + dot(4,N1o1))) + 1,dot(((N3o1 + N2o1) - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) - 1,2)).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + 1:dot(dot((N3o1 + N2o1),4),N1o1) - 1,2]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + (arange(dot(((N3o1 + N2o1) - 1),(dot(4,N1) + dot(4,N1o1))) + 3,dot(((N3o1 + N2o1) - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) - 1,2)).T
    elements2[dot(dot((N3o1 + N2o1),4),N1o1),2]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot(((N3o1 + N2o1) - 1),(dot(4,N1) + dot(4,N1o1))) + 1
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + 1:dot(dot((N3o1 + N2o1 - 1),4),N1o1) + N1o1,3]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + (arange(3,N1 + 1,2)).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + N1o1 + 1:dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(2,N1o1),3]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + (arange((N1 + 1 + N1o1 + 1) + N1 + 1,dot(N1o1,(N1 + 1 + N1o1 + 1)) + N1 + 1,(N1 + 1 + N1o1 + 1))).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(2,N1o1) + 1:dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(3,N1o1),3]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot(N1o1,(N1 + 1 + N1o1 + 1)) + (arange(N1 - 1,1,- 2)).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(3,N1o1) + 1:dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(4,N1o1),3]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + (arange(dot((N1o1 - 1),(N1 + 1 + N1o1 + 1)) + 1,1,- (N1 + 1 + N1o1 + 1))).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + 1:dot(dot((N3o1 + N2o1 - 1),4),N1o1) + N1o1,4]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + (arange(1,N1 - 1,2)).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + N1o1 + 1:dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(2,N1o1),4]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + (arange(N1 + 1,dot(N1o1,(N1 + 1 + N1o1 + 1)),(N1 + 1 + N1o1 + 1))).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(2,N1o1) + 1:dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(3,N1o1),4]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot(N1o1,(N1 + 1 + N1o1 + 1)) + (arange(N1 + 1,3,- 2)).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(3,N1o1) + 1:dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(4,N1o1),4]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + (arange(dot(N1o1,(N1 + 1 + N1o1 + 1)) + 1,(N1 + 1 + N1o1 + 1) + 1,- (N1 + 1 + N1o1 + 1))).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + 1:dot(dot((N3o1 + N2o1),4),N1o1),5]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot(((N3o1 + N2o1) - 1),(dot(4,N1) + dot(4,N1o1))) + (arange(2,dot(4,N1),2)).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + 1:dot(dot((N3o1 + N2o1),4),N1o1) - 1,6]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot(((N3o1 + N2o1) - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) + (arange(2,dot(4,N1o1))).T
    elements2[dot(dot((N3o1 + N2o1),4),N1o1),6]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot(((N3o1 + N2o1) - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) + 1
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + 1:dot(dot((N3o1 + N2o1 - 1),4),N1o1) + N1o1,7]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + (arange(2,N1,2)).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + N1o1 + 1:dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(2,N1o1),7]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + (arange((N1 + 1 + N1o1 + 1),dot(N1o1,(N1 + 1 + N1o1 + 1)),(N1 + 1 + N1o1 + 1))).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(2,N1o1) + 1:dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(3,N1o1),7]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot(N1o1,(N1 + 1 + N1o1 + 1)) + (arange(N1,2,- 2)).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(3,N1o1) + 1:dot(dot((N3o1 + N2o1 - 1),4),N1o1) + dot(4,N1o1),7]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + (arange(dot((N1o1 - 1),(N1 + 1 + N1o1 + 1)) + N1 + 1 + 1,N1 + 1 + 1,- (N1 + 1 + N1o1 + 1))).T
    elements2[dot(dot((N3o1 + N2o1 - 1),4),N1o1) + 1:dot(dot((N3o1 + N2o1),4),N1o1),8]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot(((N3o1 + N2o1) - 1),(dot(4,N1) + dot(4,N1o1))) + dot(4,N1) + (arange(1,dot(4,N1o1))).T
    edges2=zeros(dot(dot(4,(dot(4,N1o1))),(N3o1 + N2o1)),2)
    for j in arange(1,N3o1 + N2o1).reshape(-1):
        edges2[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 1:4:dot(j,(dot(4,(dot(4,N1o1))))) - 3,1]=elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),1]
        edges2[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 1:4:dot(j,(dot(4,(dot(4,N1o1))))) - 3,2]=elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),5]
        edges2[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 2:4:dot(j,(dot(4,(dot(4,N1o1))))) - 2,1]=elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),5]
        edges2[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 2:4:dot(j,(dot(4,(dot(4,N1o1))))) - 2,2]=elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),2]
        edges2[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 3:4:dot(j,(dot(4,(dot(4,N1o1))))) - 1,1]=elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),1]
        edges2[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 3:4:dot(j,(dot(4,(dot(4,N1o1))))) - 1,2]=elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),8]
        edges2[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 4:4:dot(j,(dot(4,(dot(4,N1o1))))),1]=elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),8]
        edges2[dot((j - 1),(dot(4,(dot(4,N1o1))))) + 4:4:dot(j,(dot(4,(dot(4,N1o1))))),2]=elements2[dot(dot((j - 1),4),N1o1) + 1:dot(dot(j,4),N1o1),4]
    
    elements3=zeros(dot(N1o1,N1o1),8)
    for j in arange(1,N1o1).reshape(-1):
        elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(1,N1 - 1,2)).T
        elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),2]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(3,N1 + 1,2)).T
        elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),3]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(3,N1 + 1,2)).T
        elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),4]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(1,N1 - 1,2)).T
        elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(2,N1,2)).T
        elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),6]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + N1 + 1 + (arange(2,N1o1 + 1)).T
        elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),7]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(2,N1,2)).T
        elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + N1 + 1 + (arange(1,N1o1)).T
    
    edges3=zeros(dot(dot((dot(2,N1o1) + 1),2),N1o1) + dot(2,N1o1),2)
    for j in arange(1,N1o1).reshape(-1):
        edges3[dot((j - 1),(dot(2,(dot(2,N1o1) + 1)))) + 1:4:dot(j,(dot(2,(dot(2,N1o1) + 1)))) - 5,1]=elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]
        edges3[dot((j - 1),(dot(2,(dot(2,N1o1) + 1)))) + 1:4:dot(j,(dot(2,(dot(2,N1o1) + 1)))) - 5,2]=elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]
        edges3[dot((j - 1),(dot(2,(dot(2,N1o1) + 1)))) + 2:4:dot(j,(dot(2,(dot(2,N1o1) + 1)))) - 4,1]=elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]
        edges3[dot((j - 1),(dot(2,(dot(2,N1o1) + 1)))) + 2:4:dot(j,(dot(2,(dot(2,N1o1) + 1)))) - 4,2]=elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),2]
        edges3[dot((j - 1),(dot(2,(dot(2,N1o1) + 1)))) + 3:4:dot(j,(dot(2,(dot(2,N1o1) + 1)))) - 3,1]=elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]
        edges3[dot((j - 1),(dot(2,(dot(2,N1o1) + 1)))) + 3:4:dot(j,(dot(2,(dot(2,N1o1) + 1)))) - 3,2]=elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]
        edges3[dot((j - 1),(dot(2,(dot(2,N1o1) + 1)))) + 4:4:dot(j,(dot(2,(dot(2,N1o1) + 1)))) - 2,1]=elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]
        edges3[dot((j - 1),(dot(2,(dot(2,N1o1) + 1)))) + 4:4:dot(j,(dot(2,(dot(2,N1o1) + 1)))) - 2,2]=elements3[dot((j - 1),N1o1) + 1:dot(j,N1o1),4]
        edges3[dot(j,(dot(2,(dot(2,N1o1) + 1)))) - 1,1]=elements3[dot(j,N1o1),2]
        edges3[dot(j,(dot(2,(dot(2,N1o1) + 1)))) - 1,2]=elements3[dot(j,N1o1),6]
        edges3[dot(j,(dot(2,(dot(2,N1o1) + 1)))),1]=elements3[dot(j,N1o1),6]
        edges3[dot(j,(dot(2,(dot(2,N1o1) + 1)))),2]=elements3[dot(j,N1o1),3]
    
    edges3[dot(dot((dot(2,N1o1) + 1),2),N1o1) + 1:2:dot(dot((dot(2,N1o1) + 1),2),N1o1) + dot(2,N1o1) - 1,1]=elements3[dot((N1o1 - 1),N1o1) + 1:dot(N1o1,N1o1),4]
    edges3[dot(dot((dot(2,N1o1) + 1),2),N1o1) + 1:2:dot(dot((dot(2,N1o1) + 1),2),N1o1) + dot(2,N1o1) - 1,2]=elements3[dot((N1o1 - 1),N1o1) + 1:dot(N1o1,N1o1),7]
    edges3[dot(dot((dot(2,N1o1) + 1),2),N1o1) + 2:2:dot(dot((dot(2,N1o1) + 1),2),N1o1) + dot(2,N1o1),1]=elements3[dot((N1o1 - 1),N1o1) + 1:dot(N1o1,N1o1),7]
    edges3[dot(dot((dot(2,N1o1) + 1),2),N1o1) + 2:2:dot(dot((dot(2,N1o1) + 1),2),N1o1) + dot(2,N1o1),2]=elements3[dot((N1o1 - 1),N1o1) + 1:dot(N1o1,N1o1),3]
    tri1=matlabarray([])
    for i in arange(1,size(elements1,1)).reshape(-1):
        newIndex=size(nodes,1) + 1
        if rand() > 0.5:
            nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[elements1[i,1],1] + nodes[elements1[i,3],1])),dot(0.5,(nodes[elements1[i,1],2] + nodes[elements1[i,3],2]))]))
            tri1=matlabarray(cat([tri1],[elements1[i,1],elements1[i,2],elements1[i,3],elements1[i,5],elements1[i,6],newIndex],[elements1[i,1],elements1[i,3],elements1[i,4],newIndex,elements1[i,7],elements1[i,8]]))
            edges1=matlabarray(cat([edges1],[elements1[i,1],newIndex],[newIndex,elements1[i,3]]))
        else:
            nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[elements1[i,2],1] + nodes[elements1[i,4],1])),dot(0.5,(nodes[elements1[i,2],2] + nodes[elements1[i,4],2]))]))
            tri1=matlabarray(cat([tri1],[elements1[i,1],elements1[i,2],elements1[i,4],elements1[i,5],newIndex,elements1[i,8]],[elements1[i,2],elements1[i,3],elements1[i,4],elements1[i,6],elements1[i,7],newIndex]))
            edges1=matlabarray(cat([edges1],[elements1[i,4],newIndex],[newIndex,elements1[i,2]]))
    
    tri2=matlabarray([])
    for i in arange(1,size(elements2,1)).reshape(-1):
        newIndex=size(nodes,1) + 1
        if rand() > 0.5:
            nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[elements2[i,1],1] + nodes[elements2[i,3],1])),dot(0.5,(nodes[elements2[i,1],2] + nodes[elements2[i,3],2]))]))
            tri2=matlabarray(cat([tri2],[elements2[i,1],elements2[i,2],elements2[i,3],elements2[i,5],elements2[i,6],newIndex],[elements2[i,1],elements2[i,3],elements2[i,4],newIndex,elements2[i,7],elements2[i,8]]))
            edges2=matlabarray(cat([edges2],[elements2[i,1],newIndex],[newIndex,elements2[i,3]]))
        else:
            nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[elements2[i,2],1] + nodes[elements2[i,4],1])),dot(0.5,(nodes[elements2[i,2],2] + nodes[elements2[i,4],2]))]))
            tri2=matlabarray(cat([tri2],[elements2[i,1],elements2[i,2],elements2[i,4],elements2[i,5],newIndex,elements2[i,8]],[elements2[i,2],elements2[i,3],elements2[i,4],elements2[i,6],elements2[i,7],newIndex]))
            edges2=matlabarray(cat([edges2],[elements2[i,4],newIndex],[newIndex,elements2[i,2]]))
    
    tri3=matlabarray([])
    for i in arange(1,size(elements3,1)).reshape(-1):
        newIndex=size(nodes,1) + 1
        if rand() > 0.5:
            nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[elements3[i,1],1] + nodes[elements3[i,3],1])),dot(0.5,(nodes[elements3[i,1],2] + nodes[elements3[i,3],2]))]))
            tri3=matlabarray(cat([tri3],[elements3[i,1],elements3[i,2],elements3[i,3],elements3[i,5],elements3[i,6],newIndex],[elements3[i,1],elements3[i,3],elements3[i,4],newIndex,elements3[i,7],elements3[i,8]]))
            edges3=matlabarray(cat([edges3],[elements3[i,1],newIndex],[newIndex,elements3[i,3]]))
        else:
            nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[elements3[i,2],1] + nodes[elements3[i,4],1])),dot(0.5,(nodes[elements3[i,2],2] + nodes[elements3[i,4],2]))]))
            tri3=matlabarray(cat([tri3],[elements3[i,1],elements3[i,2],elements3[i,4],elements3[i,5],newIndex,elements3[i,8]],[elements3[i,2],elements3[i,3],elements3[i,4],elements3[i,6],elements3[i,7],newIndex]))
            edges3=matlabarray(cat([edges3],[elements3[i,4],newIndex],[newIndex,elements3[i,2]]))
    
    if isCohesive:
        cohesiveEl=zeros(dot(4,N1o1),8)
        cohesiveEl[:,1]=dot(dot((N5o1 + N4o1),4),(N1 + N1o1)) + (arange(1,dot(4,N1) - 1,2)).T
        cohesiveEl[1:end() - 1,2]=dot(dot((N5o1 + N4o1),4),(N1 + N1o1)) + (arange(3,dot(4,N1) - 1,2)).T
        cohesiveEl[end(),2]=dot(dot((N5o1 + N4o1),4),(N1 + N1o1)) + 1
        cohesiveEl[1:end() - 1,3]=dot(dot((N5o1 + N4o1),4),(N1 + N1o1)) + dot(4,N1) + (arange(3,dot(4,N1) - 1,2)).T
        cohesiveEl[end(),3]=dot(dot((N5o1 + N4o1),4),(N1 + N1o1)) + dot(4,N1) + 1
        cohesiveEl[:,4]=dot(dot((N5o1 + N4o1),4),(N1 + N1o1)) + dot(4,N1) + (arange(1,dot(4,N1) - 1,2)).T
        cohesiveEd=zeros(dot(4,N1o1),2)
        cohesiveEd[1:dot(4,N1o1),1]=cohesiveEl[1:dot(4,N1o1),1]
        cohesiveEd[1:dot(4,N1o1),2]=cohesiveEl[1:dot(4,N1o1),4]
        elements=matlabarray(cat([tri1],[cohesiveEl],[tri2],[tri3]))
        edges=matlabarray(cat([edges1],[cohesiveEd],[edges2],[edges3]))
    else:
        elements=matlabarray(cat([tri1],[tri2],[tri3]))
        edges=matlabarray(cat([edges1],[edges2],[edges3]))
    
    if isUpperBounded and isLowerBounded:
        boundedBot=zeros(dot(N1o1,N6o1),8)
        boundedUp=zeros(dot(N1o1,N6o1),8)
        for j in arange(1,N6o1).reshape(-1):
            boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(1,N1 - 1,2)).T
            boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),2]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(3,N1 + 1,2)).T
            boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),3]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(3,N1 + 1,2)).T
            boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),4]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(1,N1 - 1,2)).T
            boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(2,N1,2)).T
            boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),6]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + N1 + 1 + (arange(2,N1o1 + 1)).T
            boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),7]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(2,N1,2)).T
            boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + N1 + 1 + (arange(1,N1o1)).T
            boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((N1 + 1 + N1o1 + 1),N6o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(1,N1 - 1,2)).T
            boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),2]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((N1 + 1 + N1o1 + 1),N6o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(3,N1 + 1,2)).T
            boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),3]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((N1 + 1 + N1o1 + 1),N6o1) + (N1 + 1) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(3,N1 + 1,2)).T
            boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),4]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((N1 + 1 + N1o1 + 1),N6o1) + (N1 + 1) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(1,N1 - 1,2)).T
            boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((N1 + 1 + N1o1 + 1),N6o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(2,N1,2)).T
            boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),6]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((N1 + 1 + N1o1 + 1),N6o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + N1 + 1 + (arange(2,N1o1 + 1)).T
            boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),7]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((N1 + 1 + N1o1 + 1),N6o1) + (N1 + 1) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(2,N1,2)).T
            boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((N1 + 1 + N1o1 + 1),N6o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + N1 + 1 + (arange(1,N1o1)).T
        edgesBot=zeros(dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1),2)
        edgesUp=zeros(dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1),2)
        for j in arange(1,N6o1).reshape(-1):
            edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 1:4:dot(j,(dot(4,N1o1) + 2)) - 5,1]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]
            edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 1:4:dot(j,(dot(4,N1o1) + 2)) - 5,2]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]
            edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 2:4:dot(j,(dot(4,N1o1) + 2)) - 4,1]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]
            edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 2:4:dot(j,(dot(4,N1o1) + 2)) - 4,2]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),2]
            edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 3:4:dot(j,(dot(4,N1o1) + 2)) - 3,1]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]
            edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 3:4:dot(j,(dot(4,N1o1) + 2)) - 3,2]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]
            edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 4:4:dot(j,(dot(4,N1o1) + 2)) - 2,1]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]
            edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 4:4:dot(j,(dot(4,N1o1) + 2)) - 2,2]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),4]
            edgesBot[dot(j,(dot(4,N1o1) + 2)) - 1,1]=boundedBot[dot(j,N1o1),2]
            edgesBot[dot(j,(dot(4,N1o1) + 2)) - 1,2]=boundedBot[dot(j,N1o1),6]
            edgesBot[dot(j,(dot(4,N1o1) + 2)),1]=boundedBot[dot(j,N1o1),6]
            edgesBot[dot(j,(dot(4,N1o1) + 2)),2]=boundedBot[dot(j,N1o1),3]
            edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 1:4:dot(j,(dot(4,N1o1) + 2)) - 5,1]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]
            edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 1:4:dot(j,(dot(4,N1o1) + 2)) - 5,2]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]
            edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 2:4:dot(j,(dot(4,N1o1) + 2)) - 4,1]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]
            edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 2:4:dot(j,(dot(4,N1o1) + 2)) - 4,2]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),2]
            edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 3:4:dot(j,(dot(4,N1o1) + 2)) - 3,1]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]
            edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 3:4:dot(j,(dot(4,N1o1) + 2)) - 3,2]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]
            edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 4:4:dot(j,(dot(4,N1o1) + 2)) - 2,1]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]
            edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 4:4:dot(j,(dot(4,N1o1) + 2)) - 2,2]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),4]
            edgesUp[dot(j,(dot(4,N1o1) + 2)) - 1,1]=boundedUp[dot(j,N1o1),2]
            edgesUp[dot(j,(dot(4,N1o1) + 2)) - 1,2]=boundedUp[dot(j,N1o1),6]
            edgesUp[dot(j,(dot(4,N1o1) + 2)),1]=boundedUp[dot(j,N1o1),6]
            edgesUp[dot(j,(dot(4,N1o1) + 2)),2]=boundedUp[dot(j,N1o1),3]
        edgesBot[dot((dot(4,N1o1) + 2),N6o1) + 1:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1) - 1,1]=boundedBot[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),4]
        edgesBot[dot((dot(4,N1o1) + 2),N6o1) + 1:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1) - 1,2]=boundedBot[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),7]
        edgesBot[dot((dot(4,N1o1) + 2),N6o1) + 2:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1),1]=boundedBot[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),7]
        edgesBot[dot((dot(4,N1o1) + 2),N6o1) + 2:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1),2]=boundedBot[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),3]
        edgesUp[dot((dot(4,N1o1) + 2),N6o1) + 1:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1) - 1,1]=boundedUp[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),4]
        edgesUp[dot((dot(4,N1o1) + 2),N6o1) + 1:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1) - 1,2]=boundedUp[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),7]
        edgesUp[dot((dot(4,N1o1) + 2),N6o1) + 2:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1),1]=boundedUp[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),7]
        edgesUp[dot((dot(4,N1o1) + 2),N6o1) + 2:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1),2]=boundedUp[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),3]
        triBot=matlabarray([])
        for i in arange(1,size(boundedBot,1)).reshape(-1):
            newIndex=size(nodes,1) + 1
            if rand() > 0.5:
                nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[boundedBot[i,1],1] + nodes[boundedBot[i,3],1])),dot(0.5,(nodes[boundedBot[i,1],2] + nodes[boundedBot[i,3],2]))]))
                triBot=matlabarray(cat([triBot],[boundedBot[i,1],boundedBot[i,2],boundedBot[i,3],boundedBot[i,5],boundedBot[i,6],newIndex],[boundedBot[i,1],boundedBot[i,3],boundedBot[i,4],newIndex,boundedBot[i,7],boundedBot[i,8]]))
                edgesBot=matlabarray(cat([edgesBot],[boundedBot[i,1],newIndex],[newIndex,boundedBot[i,3]]))
            else:
                nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[boundedBot[i,2],1] + nodes[boundedBot[i,4],1])),dot(0.5,(nodes[boundedBot[i,2],2] + nodes[boundedBot[i,4],2]))]))
                triBot=matlabarray(cat([triBot],[boundedBot[i,1],boundedBot[i,2],boundedBot[i,4],boundedBot[i,5],newIndex,boundedBot[i,8]],[boundedBot[i,2],boundedBot[i,3],boundedBot[i,4],boundedBot[i,6],boundedBot[i,7],newIndex]))
                edgesBot=matlabarray(cat([edgesBot],[boundedBot[i,4],newIndex],[newIndex,boundedBot[i,2]]))
        triUp=matlabarray([])
        for i in arange(1,size(boundedUp,1)).reshape(-1):
            newIndex=size(nodes,1) + 1
            if rand() > 0.5:
                nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[boundedUp[i,1],1] + nodes[boundedUp[i,3],1])),dot(0.5,(nodes[boundedUp[i,1],2] + nodes[boundedUp[i,3],2]))]))
                triUp=matlabarray(cat([triUp],[boundedUp[i,1],boundedUp[i,2],boundedUp[i,3],boundedUp[i,5],boundedUp[i,6],newIndex],[boundedUp[i,1],boundedUp[i,3],boundedUp[i,4],newIndex,boundedUp[i,7],boundedUp[i,8]]))
                edgesUp=matlabarray(cat([edgesUp],[boundedUp[i,1],newIndex],[newIndex,boundedUp[i,3]]))
            else:
                nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[boundedUp[i,2],1] + nodes[boundedUp[i,4],1])),dot(0.5,(nodes[boundedUp[i,2],2] + nodes[boundedUp[i,4],2]))]))
                triUp=matlabarray(cat([triUp],[boundedUp[i,1],boundedUp[i,2],boundedUp[i,4],boundedUp[i,5],newIndex,boundedUp[i,8]],[boundedUp[i,2],boundedUp[i,3],boundedUp[i,4],boundedUp[i,6],boundedUp[i,7],newIndex]))
                edgesUp=matlabarray(cat([edgesUp],[boundedUp[i,4],newIndex],[newIndex,boundedUp[i,2]]))
        elements=matlabarray(cat([elements],[triUp],[triBot]))
        edges=matlabarray(cat([edges],[edgesUp],[edgesBot]))
    else:
        if isUpperBounded:
            boundedUp=zeros(dot(N1o1,N6o1),8)
            for j in arange(1,N6o1).reshape(-1):
                boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(1,N1 - 1,2)).T
                boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),2]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(3,N1 + 1,2)).T
                boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),3]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(3,N1 + 1,2)).T
                boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),4]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(1,N1 - 1,2)).T
                boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(2,N1,2)).T
                boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),6]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + N1 + 1 + (arange(2,N1o1 + 1)).T
                boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),7]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(2,N1,2)).T
                boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + N1 + 1 + (arange(1,N1o1)).T
            edgesUp=zeros(dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1),2)
            for j in arange(1,N6o1).reshape(-1):
                edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 1:4:dot(j,(dot(4,N1o1) + 2)) - 5,1]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]
                edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 1:4:dot(j,(dot(4,N1o1) + 2)) - 5,2]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]
                edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 2:4:dot(j,(dot(4,N1o1) + 2)) - 4,1]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]
                edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 2:4:dot(j,(dot(4,N1o1) + 2)) - 4,2]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),2]
                edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 3:4:dot(j,(dot(4,N1o1) + 2)) - 3,1]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]
                edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 3:4:dot(j,(dot(4,N1o1) + 2)) - 3,2]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]
                edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 4:4:dot(j,(dot(4,N1o1) + 2)) - 2,1]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]
                edgesUp[dot((j - 1),(dot(4,N1o1) + 2)) + 4:4:dot(j,(dot(4,N1o1) + 2)) - 2,2]=boundedUp[dot((j - 1),N1o1) + 1:dot(j,N1o1),4]
                edgesUp[dot(j,(dot(4,N1o1) + 2)) - 1,1]=boundedUp[dot(j,N1o1),2]
                edgesUp[dot(j,(dot(4,N1o1) + 2)) - 1,2]=boundedUp[dot(j,N1o1),6]
                edgesUp[dot(j,(dot(4,N1o1) + 2)),1]=boundedUp[dot(j,N1o1),6]
                edgesUp[dot(j,(dot(4,N1o1) + 2)),2]=boundedUp[dot(j,N1o1),3]
            edgesUp[dot((dot(4,N1o1) + 2),N6o1) + 1:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1) - 1,1]=boundedUp[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),4]
            edgesUp[dot((dot(4,N1o1) + 2),N6o1) + 1:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1) - 1,2]=boundedUp[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),7]
            edgesUp[dot((dot(4,N1o1) + 2),N6o1) + 2:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1),1]=boundedUp[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),7]
            edgesUp[dot((dot(4,N1o1) + 2),N6o1) + 2:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1),2]=boundedUp[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),3]
            triUp=matlabarray([])
            for i in arange(1,size(boundedUp,1)).reshape(-1):
                newIndex=size(nodes,1) + 1
                if rand() > 0.5:
                    nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[boundedUp[i,1],1] + nodes[boundedUp[i,3],1])),dot(0.5,(nodes[boundedUp[i,1],2] + nodes[boundedUp[i,3],2]))]))
                    triUp=matlabarray(cat([triUp],[boundedUp[i,1],boundedUp[i,2],boundedUp[i,3],boundedUp[i,5],boundedUp[i,6],newIndex],[boundedUp[i,1],boundedUp[i,3],boundedUp[i,4],newIndex,boundedUp[i,7],boundedUp[i,8]]))
                    edgesUp=matlabarray(cat([edgesUp],[boundedUp[i,1],newIndex],[newIndex,boundedUp[i,3]]))
                else:
                    nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[boundedUp[i,2],1] + nodes[boundedUp[i,4],1])),dot(0.5,(nodes[boundedUp[i,2],2] + nodes[boundedUp[i,4],2]))]))
                    triUp=matlabarray(cat([triUp],[boundedUp[i,1],boundedUp[i,2],boundedUp[i,4],boundedUp[i,5],newIndex,boundedUp[i,8]],[boundedUp[i,2],boundedUp[i,3],boundedUp[i,4],boundedUp[i,6],boundedUp[i,7],newIndex]))
                    edgesUp=matlabarray(cat([edgesUp],[boundedUp[i,4],newIndex],[newIndex,boundedUp[i,2]]))
            elements=matlabarray(cat([elements],[triUp]))
            edges=matlabarray(cat([edges],[edgesUp]))
        else:
            if isLowerBounded:
                boundedBot=zeros(dot(N1o1,N6o1),8)
                for j in arange(1,N6o1).reshape(-1):
                    boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(1,N1 - 1,2)).T
                    boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),2]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(3,N1 + 1,2)).T
                    boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),3]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(3,N1 + 1,2)).T
                    boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),4]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(1,N1 - 1,2)).T
                    boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + (arange(2,N1,2)).T
                    boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),6]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + N1 + 1 + (arange(2,N1o1 + 1)).T
                    boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),7]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot(j,(N1 + 1 + N1o1 + 1)) + (arange(2,N1,2)).T
                    boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]=dot((dot(4,N1) + dot(4,N1o1)),(N5o1 + N4o1)) + dot(4,N1) + dot((dot(4,N1) + dot(4,N1o1)),(N3o1 + N2o1)) + dot((N1 + 1 + N1o1 + 1),N1o1) + (N1 + 1) + dot((j - 1),(N1 + 1 + N1o1 + 1)) + N1 + 1 + (arange(1,N1o1)).T
                edgesBot=zeros(dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1),2)
                for j in arange(1,N6o1).reshape(-1):
                    edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 1:4:dot(j,(dot(4,N1o1) + 2)) - 5,1]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]
                    edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 1:4:dot(j,(dot(4,N1o1) + 2)) - 5,2]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]
                    edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 2:4:dot(j,(dot(4,N1o1) + 2)) - 4,1]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),5]
                    edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 2:4:dot(j,(dot(4,N1o1) + 2)) - 4,2]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),2]
                    edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 3:4:dot(j,(dot(4,N1o1) + 2)) - 3,1]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),1]
                    edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 3:4:dot(j,(dot(4,N1o1) + 2)) - 3,2]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]
                    edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 4:4:dot(j,(dot(4,N1o1) + 2)) - 2,1]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),8]
                    edgesBot[dot((j - 1),(dot(4,N1o1) + 2)) + 4:4:dot(j,(dot(4,N1o1) + 2)) - 2,2]=boundedBot[dot((j - 1),N1o1) + 1:dot(j,N1o1),4]
                    edgesBot[dot(j,(dot(4,N1o1) + 2)) - 1,1]=boundedBot[dot(j,N1o1),2]
                    edgesBot[dot(j,(dot(4,N1o1) + 2)) - 1,2]=boundedBot[dot(j,N1o1),6]
                    edgesBot[dot(j,(dot(4,N1o1) + 2)),1]=boundedBot[dot(j,N1o1),6]
                    edgesBot[dot(j,(dot(4,N1o1) + 2)),2]=boundedBot[dot(j,N1o1),3]
                edgesBot[dot((dot(4,N1o1) + 2),N6o1) + 1:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1) - 1,1]=boundedBot[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),4]
                edgesBot[dot((dot(4,N1o1) + 2),N6o1) + 1:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1) - 1,2]=boundedBot[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),7]
                edgesBot[dot((dot(4,N1o1) + 2),N6o1) + 2:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1),1]=boundedBot[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),7]
                edgesBot[dot((dot(4,N1o1) + 2),N6o1) + 2:2:dot((dot(4,N1o1) + 2),N6o1) + dot(2,N1o1),2]=boundedBot[dot((N6o1 - 1),N1o1) + 1:dot(N1o1,N6o1),3]
                triBot=matlabarray([])
                for i in arange(1,size(boundedBot,1)).reshape(-1):
                    newIndex=size(nodes,1) + 1
                    if rand() > 0.5:
                        nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[boundedBot[i,1],1] + nodes[boundedBot[i,3],1])),dot(0.5,(nodes[boundedBot[i,1],2] + nodes[boundedBot[i,3],2]))]))
                        triBot=matlabarray(cat([triBot],[boundedBot[i,1],boundedBot[i,2],boundedBot[i,3],boundedBot[i,5],boundedBot[i,6],newIndex],[boundedBot[i,1],boundedBot[i,3],boundedBot[i,4],newIndex,boundedBot[i,7],boundedBot[i,8]]))
                        edgesBot=matlabarray(cat([edgesBot],[boundedBot[i,1],newIndex],[newIndex,boundedBot[i,3]]))
                    else:
                        nodes=matlabarray(cat([nodes],[dot(0.5,(nodes[boundedBot[i,2],1] + nodes[boundedBot[i,4],1])),dot(0.5,(nodes[boundedBot[i,2],2] + nodes[boundedBot[i,4],2]))]))
                        triBot=matlabarray(cat([triBot],[boundedBot[i,1],boundedBot[i,2],boundedBot[i,4],boundedBot[i,5],newIndex,boundedBot[i,8]],[boundedBot[i,2],boundedBot[i,3],boundedBot[i,4],boundedBot[i,6],boundedBot[i,7],newIndex]))
                        edgesBot=matlabarray(cat([edgesBot],[boundedBot[i,4],newIndex],[newIndex,boundedBot[i,2]]))
                elements=matlabarray(cat([elements],[triBot]))
                edges=matlabarray(cat([edges],[edgesBot]))
    
    return nodes,edges,elements