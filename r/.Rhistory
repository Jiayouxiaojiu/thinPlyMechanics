hist(wexpect$wexpect2,breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations 3 years after finishing studies", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5),add=T)
hist(wexpect$wexpect2[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,0,1,0.5),add=T)
legend("topright", c("Whole population", "Control", "Treated"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
help(legend)
hist(wexpect$wexpect2,breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations 3 years after finishing studies", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5),add=T)
hist(wexpect$wexpect2[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,0,1,0.5),add=T)
legend("right", c("Whole population", "Control", "Treated"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
legend("topleft", c("Whole population", "Control", "Treated"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
hist(wexpect$wexpect2,breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations 3 years after finishing studies", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5),add=T)
hist(wexpect$wexpect2[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,0,1,0.5),add=T)
legend("topleft", c("Whole population", "Control", "Treated"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
hist(wexpect$wexpect1,breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2,breaks = 16, col=rgb(0,1,0,0.5),add=T)
legend("topright", c("after finishing studies", "3 years after finishing studies"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
# The 3 histograms of wage expectations for whole, control and treated population show similar trend,
# it supports the assumption of random assignment
hist(wexpect$wexpect1,breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2,breaks = 16, col=rgb(0,1,0,0.5),add=T)
legend("top", c("after finishing studies", "3 years after finishing studies"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
# The 3 histograms of wage expectations for whole, control and treated population show similar trend,
hist(wexpect$wexpect1,breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2,breaks = 16, col=rgb(0,1,0,0.5),add=T)
legend("topright", c("after finishing studies", "3 years after finishing studies"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
# The 3 histograms of wage expectations for whole, control and treated population show similar trend,
# it supports the
hist(wexpect$wexpect1[wexpect$treatmentinformation==0],breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations for the control population", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5),add=T)
legend("topright", c("after finishing studies", "3 years after finishing studies"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
# There
hist(wexpect$wexpect1[wexpect$treatmentinformation==1],breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations for the treated population", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,1,0,0.5),add=T)
legend("topright", c("after finishing studies", "3 years after finishing studies"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
# There
library(foreign)
library(causalweight)
library(AER)
library(lmtest)
library(sandwich)
library(Matching)
library(MatchIt)
library(mfx)
library(boot)
library(mgcv)
library(np)
library(arm)
install.packages(arm)
install.packages("arm")
library(foreign)
library(causalweight)
library(AER)
library(lmtest)
library(sandwich)
library(Matching)
library(MatchIt)
library(mfx)
library(boot)
library(mgcv)
library(np)
library(arm)
pscore = glm(treatmentinformation~male+business+econ+communi+businform+age+swiss+motherhighedu+fatherhighedu+homeowner+matwellbeing, wexpect, family=binomial(probit))$fitted
hist(pscore[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5), main="Propensity score (probit)", xlab="Propensity score",ylab="Frequency")
hist(pscore[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,0,1,0.5),add=T)
legend("topright", c("Control", "Treated"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
model1 = treatmentinformation~male+business+econ+communi+businform+age+swiss+motherhighedu+fatherhighedu+homeowner+matwellbeing
pscore = glm(model1, wexpect, family=binomial(probit))$fitted
hist(pscore[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5), main="Propensity score (probit)", xlab="Propensity score",ylab="Frequency")
hist(pscore[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,0,1,0.5),add=T)
legend("topright", c("Control", "Treated"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
# Propensity score distribution between control and treated population are similar
hist(pscore[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5), main="Propensity score (probit)", xlab="Propensity score",ylab="Frequency")
hist(pscore[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,0,1,0.5),add=T)
legend("topright", c("Control", "Treated"), col=c(rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
# Propensity scor
hist(matching1)
matching1 = matchit(model1,wexpect,method="nearest",distance="probit",ratio=1,replace=TRUE)
library(MatchIt)
packages.install("MatchIt")
install.packages("MatchIt")
library(MatchIt)
matching1 = matchit(model1,wexpect,method="nearest",distance="probit",ratio=1,replace=TRUE)
hist(matching1)
plot(matching1,type="hist")
plot(matching1.out,type="hist")
plot(matching1,type="hist",breaks=10)
plot(matching1,type="hist",breaks=15)
plot(matching1,type="hist",breaks=20)
plot(matching1,type="hist",breaks=20)
plot(matching1,type="hist",breaks=15)
plot(matching1,type="hist",breaks=15)
standDiffTest1 = summary(matching1,standardize=TRUE)
standDiffTest1
hist(pscore[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5), main="Propensity score (probit)", xlab="Propensity score",ylab="Frequency")
hist(pscore[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5), main="Propensity score (probit) for control population", xlab="Propensity score",ylab="Frequency")
hist(pscore[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,1,0,0.5), main="Propensity score (probit) for treated population", xlab="Propensity score",ylab="Frequency")
hist(pscore[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5), main="Propensity score (probit)", xlab="Propensity score",ylab="Frequency")
hist(pscore[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,0,1,0.5),add=T)
legend("topright", c("Control", "Treated"), col=c(rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
hist(pscore[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5), main="Propensity score (probit) for control population", xlab="Propensity score",ylab="Frequency")
hist(pscore[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,1,0,0.5), main="Propensity score (probit) for treated population", xlab="Propensity score",ylab="Frequency")
hist(pscore[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5), main="Propensity score (probit)", xlab="Propensity score",ylab="Frequency")
hist(pscore[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,0,1,0.5),add=T)
legend("topright", c("Control", "Treated"), col=c(rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
hist(pscore[wexpect$treatmentinformation==0],breaks = 15, col=rgb(0,1,0,0.5), main="Propensity score (probit) for control population", xlab="Propensity score",ylab="Frequency")
hist(pscore[wexpect$treatmentinformation==1],breaks = 15, col=rgb(0,1,0,0.5), main="Propensity score (probit) for treated population", xlab="Propensity score",ylab="Frequency")
hist(pscore[wexpect$treatmentinformation==0],breaks = 15, col=rgb(0,1,0,0.5), main="Propensity score (probit)", xlab="Propensity score",ylab="Frequency")
hist(pscore[wexpect$treatmentinformation==1],breaks = 15, col=rgb(0,0,1,0.5),add=T)
legend("topright", c("Control", "Treated"), col=c(rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
# Propensity score dist
summary(pscore[wexpect$treatmentinformation==0])
summary(pscore[wexpect$treatmentinformation==1])
# Vector of covariates
x = cbind(male,business,econ,communi,businform,age,swiss,motherhighedu,fatherhighedu,homeowner,matwellbeing)
# Vector of covariates
x = cbind(wexpect$male,wexpect$business,wexpect$econ,wexpect$communi,wexpect$businform,wexpect$age,wexpect$swiss,wexpect$motherhighedu,wexpect$fatherhighedu,wexpect$homeowner,wexpect$matwellbeing)
l2 = wexpect$wexpect1~wexpect$treatmentinformation
model3 = wexpect$wex
olsModel2 = lm(model2)
model2 = wexpect$wexpect1~wexpect$treatmentinformation
model3 = wexpect$wexpect2~wexpect$treatmentinformation
olsModel2 = lm(model2)
coeftest(olsModel2,vcov = vcovHC )
olsModel3 = lm(model3)
coeftest(olsModel3,vcov = vcovHC )
# OLS with covariates
model4 = wexpect$wexpect1~wexpect$treatmentinformation+x
model5 = wexpect$wexpect2~wexpect$treatmentinformation+x
olsModel4 = lm(model4)
coeftest(olsModel4,vcov = vcovHC )
olsModel5 = lm(model5)
coeftest(olsModel5,vcov = vcovHC )
wexpectBusiness=wexpect[business==1]
wexpectBusiness=wexpect[wexpect$business==1]
wexpectBusiness=wexpect[,wexpect$business==1]
wexpectBusiness=wexpect[wexpect$business==1,]
wexpectBusiness$business
wexpectNonBusiness=wexpect[wexpect$business==0,]
# Vector of covariates
xBusiness = cbind(wexpectBusiness$male,wexpectBusiness$business,wexpectBusiness$econ,wexpectBusiness$communi,wexpectBusiness$businform,wexpectBusiness$age,wexpectBusiness$swiss,wexpectBusiness$motherhighedu,wexpectBusiness$fatherhighedu,wexpectBusiness$homeowner,wexpectBusiness$matwellbeing)
xNonBusiness = cbind(wexpectNonBusiness$male,wexpectNonBusiness$business,wexpectNonBusiness$econ,wexpectNonBusiness$communi,wexpectNonBusiness$businform,wexpectNonBusiness$age,wexpect$swiss,wexpectNonBusiness$motherhighedu,wexpectNonBusiness$fatherhighedu,wexpectNonBusiness$homeowner,wexpectNonBusiness$matwellbeing)
xNonBusiness = cbind(wexpectNonBusiness$male,wexpectNonBusiness$business,wexpectNonBusiness$econ,wexpectNonBusiness$communi,wexpectNonBusiness$businform,wexpectNonBusiness$age,wexpectNonBusiness$swiss,wexpectNonBusiness$motherhighedu,wexpectNonBusiness$fatherhighedu,wexpectNonBusiness$homeowner,wexpectNonBusiness$matwellbeing)
# OLS with covariates
modelBusiness = wexpectBusiness$wexpect2~wexpectBusiness$treatmentinformation+xBusiness
modelNonBusiness = wexpectNonBusiness$wexpect2~wexpectBusiness$treatmentinformation+xNonBusiness
#OLS with covariates
olsModelBusiness = lm(modelBusiness)
coeftest(olsModelBusiness,vcov = vcovHC)
olsModelNonBusiness = lm(modelNonBusiness)
modelNonBusiness = wexpectNonBusiness$wexpect2~wexpectNonBusiness$treatmentinformation+xNonBusiness
olsModelNonBusiness = lm(modelNonBusiness)
coeftest(olsModelNonBusiness,vcov = vcovHC)
hist(wexpect$wexpect1,breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations for the whole population", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2,breaks = 16, col=rgb(0,1,0,0.5),add=T)
legend("topright", c("after finishing studies", "3 years after finishing studies"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
hist(wexpect$wexpect1,breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations for the whole population", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2,breaks = 16, col=rgb(0,1,0,0.5),add=T)
hist(wexpect$wexpect1[wexpect$treatmentinformation==0],breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations for the control population", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5),add=T)
legend("topright", c("after finishing studies", "3 years after finishing studies"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
hist(wexpect$wexpect1[wexpect$treatmentinformation==1],breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations for the treated population", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,1,0,0.5),add=T)
legend("topright", c("after finishing studies", "3 years after finishing studies"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
hist(wexpect$wexpect1,breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations for the whole population", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2,breaks = 16, col=rgb(0,1,0,0.5),add=T)
hist(wexpect$wexpect1[wexpect$treatmentinformation==0],breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations for the control population", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5),add=T)
hist(wexpect$wexpect1[wexpect$treatmentinformation==1],breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations for the treated population", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,1,0,0.5),add=T)
hist(wexpect$wexpect2-wexpect$wexpect1,breaks = 16, col=rgb(1,0,0,0.5), main="Wage expectations difference in time (T2-T1) for the whole population", xlab="Wage levels: 0 -> <3500 CHF, 16 -> >11000 CHF, steps of 500 CHF, monthly gross",ylab="Frequency")
hist(wexpect$wexpect2[wexpect$treatmentinformation==0]-wexpect$wexpect1[wexpect$treatmentinformation==0],breaks = 16, col=rgb(1,0,0,0.5),add=T)
hist(wexpect$wexpect2[wexpect$treatmentinformation==0]-wexpect$wexpect1[wexpect$treatmentinformation==0],breaks = 16, col=rgb(0,1,0,0.5),add=T)
hist(wexpect$wexpect2[wexpect$treatmentinformation==1]-wexpect$wexpect1[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,1,0,0.5),add=T)
hist(wexpect$wexpect2[wexpect$treatmentinformation==1]-wexpect$wexpect1[wexpect$treatmentinformation==1],breaks = 16, col=rgb(0,0,1,0.5),add=T)
legend("topright", c("Whole", "Control", "Treated"), col=c(rgb(1,0,0,0.5), rgb(0,1,0,0.5),rgb(0,0,1,0.5)), lwd=10)
medweight(y,d,m,x,trim = 0.0,boot = 49)
# outcome
Y = wexpect$wexpect2
# treatment
D = wexpect$treatmentinformation
# mediator
M = wexpect$wexpect1
# Vector of covariates
X = cbind(wexpect$male,wexpect$business,wexpect$econ,wexpect$communi,wexpect$businform,wexpect$age,wexpect$swiss,wexpect$motherhighedu,wexpect$fatherhighedu,wexpect$homeowner,wexpect$matwellbeing)
mediation1 = medweight(Y,D,M,X,trim = 0.0,boot = 49)
mediation1$effect#=
mediation1$se#=
mediation1
mediation2 = medweight(Y,D,M,X,trim = 0.05,boot = 49)
mediation1 = medweight(Y,D,M,X)
mediation1
ageMax20 = wexpect$age<21
length(ageMax20)
ageMax20
hist(wexpect$treatmentinformation[ageMax20==FALSE])
hist(wexpect$treatmentinformation[ageMax20==TRUE])
hist(wexpect$treatmentinformation[wexpect$age<21])
hist(wexpect$treatmentinformation[wexpect$age>=21])
summary(wexpect$treatmentinformation[wexpect$age<21])
summary(wexpect$treatmentinformation[wexpect$age>=21])
ageMax20 = as.integer(wexpect$age<21)
summary(ageMax20)
rdd1 = lm(wexpect$expect1 ~ wexpect$treatmentinformation + ageMax20)
rdd1 = lm(wexpect$wexpect1 ~ wexpect$treatmentinformation + ageMax20)
coeftest(rdd1, vcov = vcovHC)
rdd2 = lm(wexpect$wexpect2 ~ wexpect$treatmentinformation + ageMax20)
coeftest(rdd2, vcov = vcovHC)
rdd3 = lm(wexpect$wexpect1 ~ wexpect$treatmentinformation + ageMax20+wexpect$treatmentinformation*ageMax20)
coeftest(rdd3, vcov = vcovHC)
rdd4 = lm(wexpect$wexpect2 ~ wexpect$treatmentinformation + ageMax20+wexpect$treatmentinformation*ageMax20)
coeftest(rdd4, vcov = vcovHC)
rm(list=ls())
library(foreign)
library(causalweight)
library(AER)
library(lmtest)
library(sandwich)
library(Matching)
library(MatchIt)
library(boot)
library(mgcv)
library(np)
library(arm)
library(rdd)
library(devtools)
install_github(repo="MCKnaus/dmlmt")
install.packages("mnormt")
rm(list=ls())
# load libraries
library("ggplot2")
library("stats")
library("SynchWave")
# set path of working directory
wDir <- file.path("C:","02_Local-folder","01_Luca","01_WD","thinPlyMechanics","r")
# set path of input directory
inpDir <- file.path("C:","02_Local-folder","01_Luca","01_WD","thinPlyMechanics","r")
# set path of output directory
outDir <- file.path("C:","02_Local-folder","01_Luca","01_WD","thinPlyMechanics","r")
# Set the working directory to the specified one
setwd(wDir)
# Check the current working directory is the desired one
getwd()
# Load data file and attach data to workspace
S5A0FreeTheta000 <- read.table( "S5A0-free-theta000.txt",header=TRUE,sep ="")
S5A0FreeTheta010 <- read.table( "S5A0-free-theta010.txt",header=TRUE,sep ="")
S5A0FreeTheta000$normSrr = S5A0FreeTheta000$Srr/sigmaInf
S5A0FreeTheta000$normToAvgSrr = S5A0FreeTheta000$Srr/sigmaAvg
S5A0FreeTheta010$normSrr = S5A0FreeTheta010$Srr/sigmaInf
S5A0FreeTheta010$normToAvgSrr = S5A0FreeTheta010$Srr/sigmaAvg
eps = 0.01 # -
E1 = 43442.0 #MPa
E2 = 13714.0 #MPa
nu12 = 0.273 #-
nu21 = E2*nu12/E1 #-
Ehomo = E2/(1-nu21*nu12) #MPa
sigmaInf = Ehomo*eps #MPa
sigmaAvg = 156.362190 #MPa
S5A0FreeTheta000$normSrr = S5A0FreeTheta000$Srr/sigmaInf
S5A0FreeTheta000$normToAvgSrr = S5A0FreeTheta000$Srr/sigmaAvg
S5A0FreeTheta010$normSrr = S5A0FreeTheta010$Srr/sigmaInf
S5A0FreeTheta010$normToAvgSrr = S5A0FreeTheta010$Srr/sigmaAvg
y = data$normSrr
x1 = cos(2*1*data$angle*pi/180)
x2 = cos(2*2*data$angle*pi/180)
x3 = cos(2*3*data$angle*pi/180)
x4 = cos(2*4*data$angle*pi/180)
x5 = cos(2*5*data$angle*pi/180)
x6 = cos(2*6*data$angle*pi/180)
x7 = cos(2*7*data$angle*pi/180)
x8 = cos(2*8*data$angle*pi/180)
x9 = cos(2*9*data$angle*pi/180)
x10 = cos(2*10*data$angle*pi/180)
y = S5A0FreeTheta000$normSrr
x1 = cos(2*1*S5A0FreeTheta000$angle*pi/180)
x2 = cos(2*2*S5A0FreeTheta000$angle*pi/180)
x3 = cos(2*3*S5A0FreeTheta000$angle*pi/180)
x4 = cos(2*4*S5A0FreeTheta000$angle*pi/180)
x5 = cos(2*5*S5A0FreeTheta000$angle*pi/180)
x6 = cos(2*6*S5A0FreeTheta000$angle*pi/180)
x7 = cos(2*7*S5A0FreeTheta000$angle*pi/180)
x8 = cos(2*8*S5A0FreeTheta000$angle*pi/180)
x9 = cos(2*9*S5A0FreeTheta000$angle*pi/180)
x10 = cos(2*10*S5A0FreeTheta000$angle*pi/180)
model1 = y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8
y1 = S5A0FreeTheta000$normSrr
model1 = y1 ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8
model1 = y1 ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8
ols1 = lm(formula = model1)
ols1$coefficients
reconstructedSrrOLS <- vector(length=length(S5A0FreeTheta000$Srr),mode="double")
orderMax = 6
for (j in 0:orderMax){
reconstructedSrrOLS = reconstructedSrrOLS + ols1$coefficients[j+1]*cos(2*j*S5A0FreeTheta000$angle*pi/180)
}
ggplot(m
apping = aes(x = angle, y = reconstructedSrrOLS)) + geom_point()
ggplot(mapping = aes(x = angle, y = reconstructedSrrOLS)) + geom_point()
ggplot(mapping = aes(x = S5A0FreeTheta000$angle, y = reconstructedSrrOLS)) + geom_point()
ggplot(mapping = aes(x = S5A0FreeTheta000$angle, y = S5A0FreeTheta000$Srrnorm/reconstructedSrrOLS)) + geom_point()
length(S5A0FreeTheta000$Srrnorm)
ggplot(mapping = aes(x = S5A0FreeTheta000$angle, y = S5A0FreeTheta000$normSrr/reconstructedSrrOLS)) + geom_point()
reconstructedSrrOLS010 <- vector(length=length(S5A0FreeTheta010$Srr),mode="double")
orderMax = 6
for (j in 0:orderMax){
reconstructedSrrOLS010 = reconstructedSrrOLS010 + ols1$coefficients[j+1]*cos(2*j*S5A0FreeTheta010$angle*pi/180)
}
ggplot(mapping = aes(x = S5A0FreeTheta000$angle, y = S5A0FreeTheta010$normSrr/reconstructedSrrOLS010)) + geom_point() + ylim(0.0,10)
reconstructedSrrOLS010 <- vector(length=length(S5A0FreeTheta010$Srr),mode="double")
orderMax = 6
for (j in 0:orderMax){
reconstructedSrrOLS010 = reconstructedSrrOLS010 + ols1$coefficients[j+1]*cos(2*j*S5A0FreeTheta010$angle*pi/180)
}
ggplot(mapping = aes(x = S5A0FreeTheta010$angle, y = S5A0FreeTheta010$normSrr/reconstructedSrrOLS010)) + geom_point() + ylim(0.0,10)
ggplot(mapping = aes(x = S5A0FreeTheta010$angle, y = S5A0FreeTheta010$normSrr/reconstructedSrrOLS010)) + geom_point() + ylim(0.0,100)
ggplot(mapping = aes(x = S5A0FreeTheta010$angle, y = S5A0FreeTheta010$normSrr/reconstructedSrrOLS010)) + geom_point() + ylim(0.0,10)
ggplot(mapping = aes(x = S5A0FreeTheta010$angle, y = S5A0FreeTheta010$normSrr/reconstructedSrrOLS010)) + geom_point() #+ ylim(0.0,10)
ggplot(mapping = aes(x = S5A0FreeTheta010$angle, y = S5A0FreeTheta010$normSrr-reconstructedSrrOLS010)) + geom_point() #+ ylim(0.0,10)
ggplot(mapping = aes(x = S5A0FreeTheta000$angle, y = S5A0FreeTheta000$normSrr-reconstructedSrrOLS)) + geom_point()
ggplot(mapping = aes(x = S5A0FreeTheta010$angle, y = S5A0FreeTheta010$normSrr-reconstructedSrrOLS010),log="y") + geom_point() #+ ylim(0.0,10)
ggplot(mapping = aes(x = S5A0FreeTheta010$angle, y = S5A0FreeTheta010$normSrr-reconstructedSrrOLS010),log="y") + geom_point() #+ ylim(0.0,10)
ggplot(mapping = aes(x = S5A0FreeTheta010$angle, y = S5A0FreeTheta010$normSrr-reconstructedSrrOLS010)) + geom_point() + scale_y_log10()#+ ylim(0.0,10)
ggplot(mapping = aes(x = S5A0FreeTheta010$angle, y = S5A0FreeTheta010$normSrr-reconstructedSrrOLS010)) + geom_point() #+ scale_y_log10()#+ ylim(0.0,10)
S5A0FreeTheta020 <- read.table( "S5A0-free-theta020.txt",header=TRUE,sep ="")
S5A0FreeTheta020$normSrr = S5A0FreeTheta020$Srr/sigmaInf
S5A0FreeTheta020$normToAvgSrr = S5A0FreeTheta020$Srr/sigmaAvg
reconstructedSrrOLS020 <- vector(length=length(S5A0FreeTheta020$Srr),mode="double")
orderMax = 6
for (j in 0:orderMax){
reconstructedSrrOLS020 = reconstructedSrrOLS020 + ols1$coefficients[j+1]*cos(2*j*S5A0FreeTheta020$angle*pi/180)
}
ggplot(mapping = aes(x = S5A0FreeTheta020$angle, y = S5A0FreeTheta020$normSrr-reconstructedSrrOLS020)) + geom_point() #+ scale_y_log10()#+ ylim(0.0,10)
ggplot(mapping = aes(x = S5A0FreeTheta020$angle[S5A0FreeTheta020$angle<=50.0], y = S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle<=50.0]-reconstructedSrrOLS020[S5A0FreeTheta020$angle<=50.0])) + geom_point() #+ scale_y_log10()#+ ylim(0.0,10)
ggplot(mapping = aes(x = S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 && S5A0FreeTheta020$angle<=50.0], y = S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 && S5A0FreeTheta020$angle<=50.0]-reconstructedSrrOLS020[S5A0FreeTheta020$angle>20.0 && S5A0FreeTheta020$angle<=50.0])) + geom_point() #+ scale_y_log10()#+ ylim(0.0,10)
ggplot(mapping = aes(x = S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0], y = S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0]-reconstructedSrrOLS020[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0])) + geom_point() #+ scale_y_log10()#+ ylim(0.0,10)
ggplot(mapping = aes(x = S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0], y = S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0]-reconstructedSrrOLS020[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0])) + geom_point() + scale_y_log10()#+ ylim(0.0,10)
help(log)
S5A0FreeTheta020$logRegion1 = log(S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3])
logRegion1 = log(S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3])
logRegion2 = log(S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:])
logRegion2 = log(S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:-1])
logRegion2 = log(S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)])
olsLogRegion1 = lm(formula = logRegion1~S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3])
summary(olsLogRegion1)
xLogRegion1 = S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3]
olsLogRegion1 = lm(formula = logRegion1~xLogRegion1)
summary(olsLogRegion1)
logRegion1 = log10(S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3])
olsLogRegion1 = lm(formula = logRegion1~xLogRegion1)
summary(olsLogRegion1)
logRegion1 = log(S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3])
olsLogRegion1 = lm(formula = logRegion1~xLogRegion1)
summary(olsLogRegion1)
logRegion1 = log(S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3])
xLogRegion1 = S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3]
olsLogRegion1 = lm(formula = logRegion1~xLogRegion1)
summary(olsLogRegion1)
logRegion2 = log(S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)])
xLogRegion2 = S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)]
olsLogRegion2 = lm(formula = logRegion1~xLogRegion2)
olsLogRegion2 = lm(formula = logRegion2~xLogRegion2)
summary(olsLogRegion2)
ggplot(mapping = aes(x = S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0], y = S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0]-reconstructedSrrOLS020[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0])) + geom_point() + scale_x_log10()#+ ylim(0.0,10)
logRegion1 = log(S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3])
logRegion2 = log(S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)])
logRegion1 = S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3]
logRegion2 = S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)]
yRegion1 = S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3]
yRegion2 = S5A0FreeTheta020$normSrr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)]
xLogRegion1 = log(S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3])
xLogRegion2 = log(S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)])
olsLogRegion1 = lm(formula = logRegion1~xLogRegion1)
summary(olsLogRegion1)
olsLogRegion2 = lm(formula = logRegion2~xLogRegion2)
summary(olsLogRegion2)
yRegion1 = S5A0FreeTheta020$Srr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3]
yRegion2 = S5A0FreeTheta020$Srr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)]
olsLogRegion1 = lm(formula = logRegion1~xLogRegion1)
summary(olsLogRegion1)
olsLogRegion2 = lm(formula = logRegion2~xLogRegion2)
summary(olsLogRegion2)
logyRegion1 = log(S5A0FreeTheta020$Srr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3])
logyRegion2 = log(S5A0FreeTheta020$Srr[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)])
xLogRegion1 = log(S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3])
olsLogRegion1 = lm(formula = logyRegion1~xLogRegion1)
summary(olsLogRegion1)
xLogRegion2 = log(S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)])
olsLogRegion2 = lm(formula = logyRegion2~xLogRegion2)
summary(olsLogRegion2)
logyRegion1 = log((S5A0FreeTheta020$normSrr-reconstructedSrrOLS020)[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3])
logyRegion2 = log((S5A0FreeTheta020$normSrr-reconstructedSrrOLS020)[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)])
xLogRegion1 = log(S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3])
olsLogRegion1 = lm(formula = logyRegion1~xLogRegion1)
summary(olsLogRegion1)
xLogRegion2 = log(S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)])
olsLogRegion2 = lm(formula = logyRegion2~xLogRegion2)
summary(olsLogRegion2)
yRegion1 = (S5A0FreeTheta020$normSrr-reconstructedSrrOLS020)[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3]
yRegion2 = (S5A0FreeTheta020$normSrr-reconstructedSrrOLS020)[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)]
xRegion1 = S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3]^(-0.5)
olsRegion1 = lm(formula = yRegion1~xRegion1)
summary(olsRegion1)
xRegion2 = S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)]^(-0.5)
olsRegion2 = lm(formula = yRegion2~xRegion2)
summary(olsRegion2)
xRegion1 = (S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3]*pi/180.0)^(-0.5)
olsRegion1 = lm(formula = yRegion1~xRegion1)
summary(olsRegion1)
xRegion2 = (S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)]*pi/180.0)^(-0.5)
olsRegion2 = lm(formula = yRegion2~xRegion2)
summary(olsRegion2)
yLogRegion1 = log((S5A0FreeTheta020$normSrr-reconstructedSrrOLS020)[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3])
yLogRegion2 = log((S5A0FreeTheta020$normSrr-reconstructedSrrOLS020)[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)])
xLogRegion1 = log(S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3]*pi/180.0)
olsLogRegion1 = lm(formula = yLogRegion1~xLogRegion1)
summary(olsLogRegion1)
xLogRegion2 = log(S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][4:length(S5A0FreeTheta020$angle)]*pi/180.0)
olsLogRegion2 = lm(formula = yLogRegion2~xLogRegion2)
summary(olsLogRegion2)
summary(olsRegion2)
summary(olsRegion1)
xRegion1 = (S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3]*pi/180.0)^(-1)
olsRegion1 = lm(formula = yRegion1~xRegion1)
summary(olsRegion1)
xRegion1 = (S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3]*pi/180.0)^(-2)
olsRegion1 = lm(formula = yRegion1~xRegion1)
summary(olsRegion1)
xRegion1 = (S5A0FreeTheta020$angle[S5A0FreeTheta020$angle>20.0 & S5A0FreeTheta020$angle<=50.0][1:3]*pi/180.0)^(-1)
olsRegion1 = lm(formula = yRegion1~xRegion1)
summary(olsRegion1)
S5A0T1Theta000 <- read.table( "S5A0T1-theta000.txt",header=TRUE,sep ="")
ggplot(data = S5A0T1Theta010, mapping = aes(x = angle, y = Srr)) + geom_point()
ggplot(data = S5A0T1Theta000, mapping = aes(x = angle, y = Srr)) + geom_point()
ggplot()+
geom_point(data = S5A0FreeTheta000, mapping = aes(x = angle, y = Srr),color="blue") +
geom_point(data = S5A0T1Theta000, mapping = aes(x = angle, y = Srr),color="red")
ggplot(data = S5A0FreeTheta000, mapping = aes(x = angle, y = normSrr)) + geom_point()
ggplot(data = S5A0T1Theta000, mapping = aes(x = angle, y = normSrr)) + geom_point()
S5A0T1Theta000$normSrr = S5A0T1Theta000$Srr/sigmaInf
S5A0T1Theta000$normToAvgSrr = S5A0T1Theta000$Srr/sigmaAvg
ggplot(data = S5A0T1Theta000, mapping = aes(x = angle, y = normSrr)) + geom_point()
ggplot(data = S5A0T1Theta000, mapping = aes(x = angle, y = normToAvgSrr)) + geom_point()
S5A0T1Theta000$k = 1:length(S5A0T1Theta000$normSrr)
S5A0T1Theta000$kshift = S5A0T1Theta000$k-ceiling(0.5*length(S5A0T1Theta000$normSrr))
S5A0T1Theta000$SrrRe <- Re(S5A0T1Theta000$SrrFFT)
S5A0T1Theta000$SrrFFT = fft(S5A0T1Theta000$normSrr)
S5A0T1Theta000$k = 1:length(S5A0T1Theta000$normSrr)
S5A0T1Theta000$kshift = S5A0T1Theta000$k-ceiling(0.5*length(S5A0T1Theta000$normSrr))
S5A0T1Theta000$SrrRe <- Re(S5A0T1Theta000$SrrFFT)
S5A0T1Theta000$SrrIm <- Im(S5A0T1Theta000$SrrFFT)
S5A0T1Theta000$SrrAmplitude <- sqrt(S5A0T1Theta000$SrrRe*S5A0T1Theta000$SrrRe+S5A0T1Theta000$SrrIm*S5A0T1Theta000$SrrIm)
S5A0T1Theta000$SrrPhaseRad <- atan2(S5A0T1Theta000$SrrIm,S5A0T1Theta000$SrrRe)
S5A0T1Theta000$SrrPhaseDeg <- S5A0T1Theta000$SrrPhaseRad*180.0/pi
ggplot(data = S5A0T1Theta000, mapping = aes(x = kshift, y = fftshift(S5A0FreeT1000$SrrAmplitude))) + geom_point()
ggplot(data = S5A0T1Theta000, mapping = aes(x = kshift, y = fftshift(S5A0T1000$SrrAmplitude))) + geom_point()
ggplot(data = S5A0T1Theta000, mapping = aes(x = kshift, y = fftshift(S5A0T1Theta000$SrrAmplitude))) + geom_point()
length(S5A0T1Theta000$SrrAmplitude
)
ceiling(0.5*length(S5A0T1Theta000$normSrr))
S5A0T1Theta000$kshift
View(S5A0T1Theta000)
S5A0T1Theta000 <- read.table( "S5A0T1-theta000.txt",header=TRUE,sep ="")
S5A0T1Theta000$SrrFFT = fft(S5A0T1Theta000$normSrr)
S5A0T1Theta000$k = 1:length(S5A0T1Theta000$normSrr)
S5A0T1Theta000$kshift = S5A0T1Theta000$k-ceiling(0.5*length(S5A0T1Theta000$normSrr))
S5A0T1Theta000$SrrRe <- Re(S5A0T1Theta000$SrrFFT)
S5A0T1Theta000$SrrIm <- Im(S5A0T1Theta000$SrrFFT)
S5A0T1Theta000$SrrAmplitude <- sqrt(S5A0T1Theta000$SrrRe*S5A0T1Theta000$SrrRe+S5A0T1Theta000$SrrIm*S5A0T1Theta000$SrrIm)
S5A0T1Theta000$SrrPhaseRad <- atan2(S5A0T1Theta000$SrrIm,S5A0T1Theta000$SrrRe)
S5A0T1Theta000$SrrPhaseDeg <- S5A0T1Theta000$SrrPhaseRad*180.0/pi
ggplot(data = S5A0T1Theta000, mapping = aes(x = kshift, y = fftshift(S5A0T1Theta000$SrrAmplitude))) + geom_point()
S5A0T1Theta000$normSrr = S5A0T1Theta000$Srr/sigmaInf
S5A0T1Theta000$normToAvgSrr = S5A0T1Theta000$Srr/sigmaAvg
S5A0T1Theta000$SrrFFT = fft(S5A0T1Theta000$normSrr)
S5A0T1Theta000$k = 1:length(S5A0T1Theta000$normSrr)
S5A0T1Theta000$kshift = S5A0T1Theta000$k-ceiling(0.5*length(S5A0T1Theta000$normSrr))
S5A0T1Theta000$SrrRe <- Re(S5A0T1Theta000$SrrFFT)
S5A0T1Theta000$SrrIm <- Im(S5A0T1Theta000$SrrFFT)
S5A0T1Theta000$SrrAmplitude <- sqrt(S5A0T1Theta000$SrrRe*S5A0T1Theta000$SrrRe+S5A0T1Theta000$SrrIm*S5A0T1Theta000$SrrIm)
S5A0T1Theta000$SrrPhaseRad <- atan2(S5A0T1Theta000$SrrIm,S5A0T1Theta000$SrrRe)
S5A0T1Theta000$SrrPhaseDeg <- S5A0T1Theta000$SrrPhaseRad*180.0/pi
ggplot(data = S5A0T1Theta000, mapping = aes(x = kshift, y = fftshift(S5A0T1Theta000$SrrAmplitude))) + geom_point()
ggplot() +
geom_point(data = S5A0T1Theta000, mapping = aes(x = kshift, y = fftshift(S5A0T1Theta000$SrrAmplitude)),color="blue") +
geom_point(data = S5A0T1Theta000, mapping = aes(x = kshift, y = fftshift(S5A0T1Theta000$SrrAmplitude)),color="red")
ggplot() +
geom_point(data = S5A0FreeTheta000, mapping = aes(x = kshift, y = fftshift(S5A0T1Theta000$SrrAmplitude)),color="blue") +
geom_point(data = S5A0T1Theta000, mapping = aes(x = kshift, y = fftshift(S5A0T1Theta000$SrrAmplitude)),color="red")
S5A0FreeTheta000$SrrFFT = fft(S5A0FreeTheta000$normSrr)
S5A0FreeTheta000$k = 1:length(S5A0FreeTheta000$normSrr)
S5A0FreeTheta000$kshift = S5A0FreeTheta000$k-ceiling(0.5*length(S5A0FreeTheta000$normSrr))
S5A0FreeTheta000$SrrRe <- Re(S5A0FreeTheta000$SrrFFT)
S5A0FreeTheta000$SrrIm <- Im(S5A0FreeTheta000$SrrFFT)
S5A0FreeTheta000$SrrAmplitude <- sqrt(S5A0FreeTheta000$SrrRe*S5A0FreeTheta000$SrrRe+S5A0FreeTheta000$SrrIm*S5A0FreeTheta000$SrrIm)
S5A0FreeTheta000$SrrPhaseRad <- atan2(S5A0FreeTheta000$SrrIm,S5A0FreeTheta000$SrrRe)
S5A0FreeTheta000$SrrPhaseDeg <- S5A0FreeTheta000$SrrPhaseRad*180.0/pi
ggplot() +
geom_point(data = S5A0FreeTheta000, mapping = aes(x = kshift, y = fftshift(S5A0T1Theta000$SrrAmplitude)),color="blue") +
geom_point(data = S5A0T1Theta000, mapping = aes(x = kshift, y = fftshift(S5A0T1Theta000$SrrAmplitude)),color="red")
ggplot() +
geom_point(data = S5A0FreeTheta000, mapping = aes(x = kshift, y = fftshift(S5A0FreeTheta000$SrrAmplitude)),color="blue") +
geom_point(data = S5A0T1Theta000, mapping = aes(x = kshift, y = fftshift(S5A0T1Theta000$SrrAmplitude)),color="red")
x1
ols1 = lm(formula = model1)
ols1$coefficients
ols2 = lm(formula = model2)
y2 = S5A0T1Theta000$normSrr
model2 = y2 ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8
ols2 = lm(formula = model2)
ols2$coefficients
summary(ols1)
summary(ols2)
